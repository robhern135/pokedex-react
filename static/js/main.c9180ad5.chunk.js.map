{"version":3,"sources":["components/Header.js","components/Pokemon.js","components/Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Pokemon","pokemon","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","main_types","Object","keys","id","name","toUpperCase","slice","number","toString","padStart","poke_types","types","map","t","type","useType","find","indexOf","color","sprite","style","backgroundColor","src","alt","Pokedex","useState","poke","setPoke","loading","setLoading","count","offset","filter","setFilter","fetchPokemon","a","i","axios","get","then","res","newPokemon","data","useEffect","Fragment","defaultValue","onChange","e","gen","target","value","console","log","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9180ad5.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Header() {\n  return (\n    <div className=\"titles\">\n      <h1>Pok√©dex</h1>\n      <small>Design inspired by <a href=\"https://dribbble.com/shots/5611109--Pokemon\">this Dribbble shot</a></small>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nconst Pokemon = ({ pokemon }) => {\n  const colors = {\n    fire: \"#FDDFDF\",\n    grass: \"#DEFDE0\",\n    electric: \"#FCF7DE\",\n    water: \"#DEF3FD\",\n    ground: \"#f4e7da\",\n    rock: \"#d5d5d4\",\n    fairy: \"#fceaff\",\n    poison: \"#98d7a5\",\n    bug: \"#f8d5a3\",\n    dragon: \"#97b3e6\",\n    psychic: \"#eaeda1\",\n    flying: \"#F5F5F5\",\n    fighting: \"#E6E0D4\",\n    normal: \"#F5F5F5\",\n  }\n\n  const main_types = Object.keys(colors)\n\n  const { id } = pokemon\n  const name = pokemon.name[0].toUpperCase() + pokemon.name.slice(1)\n  const number = pokemon.id.toString().padStart(\"3\", \"0\")\n  const poke_types = pokemon.types.map((t) => t.type.name)\n  const useType = main_types.find((type) => poke_types.indexOf(type) > -1)\n  const color = colors[useType]\n\n  const sprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\n  // const shinySprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/${id}.png`\n\n  return (\n    <div className=\"pokemon\" style={{ backgroundColor: color }}>\n      <div className=\"img-container\">\n        <img src={sprite} alt={name} />\n      </div>\n      <div className=\"info\">\n        <span className=\"number\">{`#${number}`}</span>\n        <h3 className=\"name\">{name}</h3>\n        <small className=\"type\">\n          Type: <span>{`${useType}`}</span>\n        </small>\n      </div>\n    </div>\n  )\n}\n\nexport default Pokemon\n","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nimport Pokemon from \"./Pokemon\"\n\nconst Pokedex = () => {\n  const [poke, setPoke] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [filter, setFilter] = useState({\n    //final pokemon in gen\n    count: null,\n    //first pokemon in gen\n    offset: null,\n  })\n\n  const onGenChange = (e) => {\n    let gen = e.target.value\n\n    switch (gen) {\n      case (gen = \"Kanto\"):\n        console.log(\"Kanto\")\n        setFilter({\n          count: 151,\n          offset: 1,\n        })\n        break\n\n      case (gen = \"Johto\"):\n        console.log(\"Johto\")\n        setFilter({\n          count: 251,\n          offset: 152,\n        })\n        break\n\n      case (gen = \"Hoenn\"):\n        console.log(\"Hoenn\")\n        setFilter({\n          count: 386,\n          offset: 252,\n        })\n        break\n\n      case (gen = \"Sinnoh\"):\n        console.log(\"Sinnoh\")\n        setFilter({\n          //final pokemon in gen\n          count: 484,\n          //first pokemon in gen\n          offset: 387,\n        })\n        break\n\n      case (gen = \"Unova\"):\n        console.log(\"Unova\")\n        setFilter({\n          //final pokemon in gen\n          count: 649,\n          //first pokemon in gen\n          offset: 485,\n        })\n        break\n\n      case (gen = \"Kalos\"):\n        console.log(\"Kalos\")\n        setFilter({\n          //final pokemon in gen\n          count: 721,\n          //first pokemon in gen\n          offset: 650,\n        })\n        break\n\n      case (gen = \"Alola\"):\n        console.log(\"Alola\")\n        setFilter({\n          //final pokemon in gen\n          count: 809,\n          //first pokemon in gen\n          offset: 722,\n        })\n        break\n\n      case (gen = \"Galar\"):\n        console.log(\"Galar\")\n        setFilter({\n          //final pokemon in gen\n          count: 898,\n          //first pokemon in gen\n          offset: 810,\n        })\n        break\n\n      default:\n        return null\n    }\n  }\n\n  const fetchPokemon = async () => {\n    setLoading(true)\n\n    for (let i = filter.offset; i <= filter.count; i++) {\n      await axios.get(`https://pokeapi.co/api/v2/pokemon/${i}`).then((res) => {\n        const newPokemon = res.data\n        // console.log(newPokemon)\n        setPoke((poke) => [...poke, newPokemon])\n      })\n\n      if (i === filter.count) {\n        setLoading(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (filter.count || filter.offset) {\n      setPoke([])\n\n      fetchPokemon()\n    }\n  }, [filter.offset])\n\n  //151,1\n  //251, 152\n  //386, 252\n  //484, 387\n  //649. 485\n  //721, 650\n  //809, 722\n  //898 ,810\n\n  return (\n    <React.Fragment>\n      <div className=\"generation-container\">\n        <form className=\"gen-select  select-dropdown\">\n          <select\n            className=\"gen-dropdown\"\n            defaultValue=\"select\"\n            onChange={onGenChange}\n          >\n            <option disabled value=\"select\">\n              Select a Generation to begin\n            </option>\n            <option value=\"Kanto\">Kanto</option>\n            <option value=\"Johto\">Johto</option>\n            <option value=\"Hoenn\">Hoenn</option>\n            <option value=\"Sinnoh\">Sinnoh</option>\n            <option value=\"Unova\">Unova</option>\n            <option value=\"Kalos\">Kalos</option>\n            <option value=\"Alola\">Alola</option>\n            <option value=\"Galar\">Galar</option>\n          </select>\n        </form>\n        {loading && <div className=\"spinner\"></div>}\n      </div>\n      <div className=\"pokedex\">\n        {poke.map((pokemon) => (\n          <Pokemon pokemon={pokemon} key={pokemon.id} />\n        ))}\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Pokedex\n","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Pokedex from \"./components/Pokedex\"\n\n//todo: pagination and infinite scroll\n//todo: react router\n//todo: save favorite pokemon?\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Pokedex />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}